// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  profile   Profile?
  trips     Trip[]
}

model Profile {
  id       String    @id @default(uuid())
  userId   String    @unique
  picture  String?
  location String?
  dob      DateTime?
  gender   String?
  user     User      @relation(fields: [userId], references: [id])
}

enum Location {
  NEW_YORK_CITY
  LOS_ANGELES
  CHICAGO
  TORONTO
}

model Trip {
  id           String        @id @default(uuid())
  location     Location
  checkIn      DateTime
  checkOut     DateTime
  passengers   Int           @default(1)
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  reservations Reservation[]
}

model Reservation {
  id                  String              @id @default(uuid())
  bookingConfirmation String?
  checkIn             DateTime
  checkOut            DateTime
  tripId              String
  trip                Trip                @relation(fields: [tripId], references: [id])
  HotelReservation    HotelReservation[]
  FlightReservation   FlightReservation[]
  CarReservation      CarReservation[]
}

model HotelReservation {
  id            String      @id @default(uuid())
  hotelName     String?
  hotelPhone    String?
  location      String
  reservationId String
  reservation   Reservation @relation(fields: [reservationId], references: [id])
}

model FlightReservation {
  id            String      @id @default(uuid())
  airlineName   String
  flightNumber  String?
  reservationId String
  departure     String
  arrival       String
  reservation   Reservation @relation(fields: [reservationId], references: [id])
}

model CarReservation {
  id              String      @id @default(uuid())
  agencyName      String
  carType         String?
  pickupLocation  String
  dropoffLocation String
  reservationId   String
  reservation     Reservation @relation(fields: [reservationId], references: [id])
}

// model Preference {
//   id     String @id @default(uuid())
//   tripId String
//   trip   Trip   @relation(fields: [tripId], references: [id])
//   // other fields...
// }

// model RefreshToken {
//   id        String   @id @default(uuid())
//   userId    String
//   user      User     @relation(fields: [userId], references: [id])
//   token     String   @unique
//   createdAt DateTime @default(now())
//   expiresAt DateTime
// }
